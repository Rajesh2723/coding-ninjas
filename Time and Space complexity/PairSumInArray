#include <algorithm> 
int pairSum(int *arr, int n, int num)
{
	//Write your code here
    int ans=0;
    sort(arr, arr + n);
    int i=0,j=n-1;
    while(i<j) {
       if(arr[i]+arr[j]<num)
           i++;
       else if(arr[i]+arr[j]>num)
           j--;
       else
       {
           
       
           
            int x = arr[i], xx = i;
            while (i < j and arr[i] == x)
                i++;
 
            // Find the frequency of arr[j]
            int y = arr[j], yy = j;
            while (j >= i and arr[j] == y)
                j--;
 
            // If arr[i] and arr[j] are same
            // then remove the extra number counted
            if (x == y) {
                int temp = i - xx + yy - j - 1;
                ans += (temp * (temp + 1)) / 2;
            }
            else
                ans += (i - xx) * (yy - j);
        }
       
           
           
       }
    
     return ans;
           
    }
    /// another approach for this problem
    int pairSum(int *arr, int n, int num)
{
	
     //try following this approach if confused
    int count=0;
    for(int i=0;i<n-1;i++){
        int val=num-arr[i];
        for(int j=i+1;j<n;j++){
            if(val==arr[j]){
                count++;
            }
        }
        
    }
    return count;
}
    
