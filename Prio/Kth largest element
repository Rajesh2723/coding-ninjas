#include<bits/stdc++.h>
int kthLargest(int* arr, int n, int k) {
    vector<int>v;
    sort(arr,arr+n,greater<int>());
    for(int i=0;i<n;i++){
        v.push_back(arr[i]);
    }
    return v[k-1];
}
//using the priority queue

#include<queue>
int kthLargest(int* arr, int n, int k) {
    priority_queue<int, vector<int>, greater<int> > pq;
    for(int i=0; i<k ; i++){
        pq.push(arr[i]);
    }
    for(int i=k; i<n; i++){
        int min = pq.top();
        if(arr[i] > min){
            pq.pop();
            pq.push(arr[i]);
        }
    }
    return pq.top();
}
//the efficent solution of having the 0(nlogn)
